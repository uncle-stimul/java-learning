import java.math.BigInteger;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class AppTest {
    public static void workload(String num1, String sign, String num2, String trueResult) {
        long memStart = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        long timeStart = System.currentTimeMillis();

        BigInteger a = App.checkNum(num1);
        sign = App.checkSign(sign);
        BigInteger b = App.checkNum(num2);
        BigInteger result = App.calc(a, sign, b);

        assertEquals(new BigInteger(trueResult), result);

        long timeEnd = System.currentTimeMillis();
        long memEnd = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();

        long runtime = timeEnd - timeStart;
        String timeClass = " мс";
        if (runtime >= 1000) {
            runtime /= 1000;
            timeClass = " с";
        }

        long memResult = (memEnd - memStart) / 1024;
        String memClass = " КБ\n";
        if (memResult >= 1024) {
            memResult /= 1024;
            memClass = " МБ\n";
        }

        System.out.println(
                "\nВходные данные: " + a + " " + sign + " " + b
                        + "\nВыходные данные: " + result
                        + "\nОжидаемый результат: " + trueResult
                        + "\nВремя работы: " + runtime + timeClass
                        + "\nИспользованная память: " + memResult + memClass
        );
    }

    @Test
    public void test01() {
        AppTest.workload(
                "232",
                "+",
                "-100",
                "132"
        );
    }

    @Test
    public void test02() {
        AppTest.workload(
                "-100",
                "-",
                "199",
                "-299"
        );
    }

    @Test
    public void test03() {
        AppTest.workload(
                "123",
                "+",
                "999",
                "1122"
        );
    }

    @Test
    public void test04() {
        AppTest.workload(
                "010203",
                "-",
                "010203",
                "0"
        );
    }

    @Test
    public void test05() {
        AppTest.workload(
                "00000000001",
                "+",
                "2300002",
                "2300003"
        );
    }

    @Test
    public void test06() {
        AppTest.workload(
                "23",
                "-",
                "8",
                "15"
        );
    }

    @Test
    public void test07() {
        AppTest.workload(
                "123456789123456789",
                "+",
                "987654321987654321",
                "1111111111111111110"
        );
    }

    @Test
    public void test08() {
        AppTest.workload(
                "1a",
                "+",
                "1",
                "2"
        );
    }

    @Test
    public void test09() {
        AppTest.workload(
                "1",
                "-a",
                "1",
                "0"
        );
    }

    @Test
    public void test10() {
        AppTest.workload(

                "-",

                "0"
        );
    }
}
